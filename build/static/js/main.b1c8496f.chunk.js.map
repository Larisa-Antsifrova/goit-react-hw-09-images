{"version":3,"sources":["components/DeleteButton/DeleteButton.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/CloseButton/CloseButton.module.css","components/Error/Error.module.css","components/Searchbar/Searchbar.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/DeleteButton/DeleteButton.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/CloseButton/CloseButton.js","components/Modal/Modal.js","components/Error/Error.js","services/pixabayApi.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","Searchbar","onSubmit","useState","query","setQuery","SearchForm","event","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGallery","DeleteButton","id","onDelete","onClick","deleteIcon","ImageGalleryItem","image","webformatURL","largeImageURL","tags","setLargeImg","deleteImage","showDeleteButton","setShowDeleteButton","toggleButton","onMouseEnter","onMouseLeave","onMouseOver","src","alt","Button","label","defaultProps","CloseButton","onClose","modalRoot","document","querySelector","Modal","largeImgUrl","loaded","setLoaded","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","currentTarget","onLoad","Error","message","error","axios","defaults","baseURL","API_KEY","process","a","page","perPage","get","data","hits","App","images","setImages","setPage","isLoading","setIsLoading","setError","selectedImage","setSelectedImage","showModal","setShowModal","fetchImages","then","prevImages","catch","finally","toggleModal","imageId","filter","newQuery","map","color","height","width","_","isEmpty","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b1c8496f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeleteButton\":\"DeleteButton_DeleteButton__2xBJy\",\"deleteIcon\":\"DeleteButton_deleteIcon__1jIbu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1BKt5\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image___rWS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1LxPU\",\"Modal\":\"Modal_Modal__Tkr5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1tP7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2ihN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__23UvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CloseButton\":\"CloseButton_CloseButton__3aSXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__13TFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1Wmut\",\"SearchForm\":\"Searchbar_SearchForm__3JZ8f\",\"SearchForm-button\":\"Searchbar_SearchForm-button__3Sdy1\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__ooENt\",\"SearchForm-input\":\"Searchbar_SearchForm-input__K7x56\"};","// React imports\nimport React from 'react';\n// Helpers imports\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={styles.Container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","// React imports\nimport React, { useState } from 'react';\n// Helpers imports\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = ({ target: { value } }) => setQuery(value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    query && onSubmit(query);\n\n    setQuery('');\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles['SearchForm-button']}>\n          <span className={styles['SearchForm-button-label']}>Search</span>\n        </button>\n\n        <input\n          className={styles['SearchForm-input']}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// React imports\nimport React from 'react';\n// Helpers imports\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './ImageGallery.module.css';\n\nconst ImageGallery = ({ children }) => {\n  return <ul className={styles.ImageGallery}>{children}</ul>;\n};\n\nImageGallery.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ImageGallery;\n","// React imports\nimport React from 'react';\n// Icons imports\nimport { MdRemoveCircleOutline } from 'react-icons/md';\n// Styles imports\nimport styles from './DeleteButton.module.css';\n\nconst DeleteButton = ({ id, onDelete }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={() => onDelete(id)}\n      className={styles.DeleteButton}\n    >\n      <MdRemoveCircleOutline className={styles.deleteIcon} />\n    </button>\n  );\n};\n\nexport default DeleteButton;\n","// React imports\nimport React, { useState } from 'react';\n// Components imports\nimport DeleteButton from '../DeleteButton';\n// Helpers imports\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  image: { webformatURL, largeImageURL, tags, id },\n  setLargeImg,\n  deleteImage,\n}) {\n  const [showDeleteButton, setShowDeleteButton] = useState();\n\n  const toggleButton = () => {\n    setShowDeleteButton(!showDeleteButton);\n  };\n\n  const showButton = () => {\n    setShowDeleteButton(true);\n  };\n\n  return (\n    <li\n      className={styles.ImageGalleryItem}\n      onMouseEnter={toggleButton}\n      onMouseLeave={toggleButton}\n      onMouseOver={showButton}\n    >\n      <img\n        onClick={() => setLargeImg(largeImageURL)}\n        src={webformatURL}\n        alt={tags}\n        className={styles['ImageGalleryItem-image']}\n      />\n      {showDeleteButton && <DeleteButton id={id} onDelete={deleteImage} />}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }).isRequired,\n  setLargeImg: PropTypes.func.isRequired,\n};\n","// React imports\nimport React from 'react';\n// Helpers imports\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Button.module.css';\n\nconst Button = ({ onClick, label }) => {\n  return (\n    <button type=\"button\" className={styles.Button} onClick={onClick}>\n      {label}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  label: 'Button',\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  label: PropTypes.string,\n};\n\nexport default Button;\n","// React imports\nimport React from 'react';\n// Icons imports\nimport { MdClose } from 'react-icons/md';\n// Styles imports\nimport styles from './CloseButton.module.css';\n\nconst CloseButton = ({ onClose }) => {\n  return (\n    <button type=\"button\" className={styles.CloseButton} onClick={onClose}>\n      <MdClose />\n    </button>\n  );\n};\n\nexport default CloseButton;\n","// React imports\nimport React, { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n// Components imports\nimport CloseButton from '../CloseButton';\n// Helpers imports\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Modal.module.css';\n\n// Getting access to another div to render the Modal\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, largeImgUrl }) {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const handleKeyDown = event => event.code === 'Escape' && onClose();\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleBackdropClick = event =>\n    event.currentTarget === event.target && onClose();\n\n  const handleLoad = () => setLoaded(true);\n\n  return createPortal(\n    <div className={styles.Overlay} onClick={handleBackdropClick}>\n      <div className={styles.Modal}>\n        {loaded && <CloseButton onClose={onClose} />}\n        <img src={largeImgUrl} alt=\"Gallery item\" onLoad={handleLoad} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  largeImgUrl: PropTypes.string.isRequired,\n};\n","// React imports\nimport React from 'react';\n// Helpers imports\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Error.module.css';\n\nconst Error = ({ message }) => {\n  return <p className={styles.error}>{message}</p>;\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","// Axios library imports\nimport axios from 'axios';\n// Configuring Axios\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\n// Function to fetch images with query. Returns an array of result objects\nasync function fetchImages({ query = '', page = 1, perPage = 12 }) {\n  const { data } = await axios.get(\n    `?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n  );\n  return data.hits;\n}\n\nexport { fetchImages };\n","// React imports\nimport React, { useState, useEffect } from 'react';\n// Components imports\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport Error from './components/Error';\n// Importing function to fetch images from API\nimport { fetchImages } from './services/pixabayApi';\n// Loader imports\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// Libs imports\nimport _ from 'lodash';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!query) return;\n\n    setIsLoading(true);\n\n    fetchImages({\n      query,\n      page,\n    })\n      .then(images => {\n        setImages(prevImages => [...prevImages, ...images]);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, [page, query]);\n\n  const handleSubmit = newQuery => {\n    setImages([]);\n    setQuery(newQuery);\n    setPage(1);\n    setIsLoading(false);\n    setError(null);\n    setSelectedImage('');\n    setShowModal(false);\n  };\n\n  const setLargeImg = largeImageURL => {\n    setSelectedImage(largeImageURL);\n    toggleModal();\n  };\n\n  const increasePage = () => setPage(prevPage => prevPage + 1);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const deleteImage = imageId => {\n    setImages(prevImages => prevImages.filter(image => image.id !== imageId));\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleSubmit} />\n      <Container>\n        <ImageGallery>\n          {images.map(image => (\n            <ImageGalleryItem\n              key={image.id}\n              image={image}\n              setLargeImg={setLargeImg}\n              deleteImage={deleteImage}\n            />\n          ))}\n        </ImageGallery>\n        {error && <Error message={error.message} />}\n        {isLoading && (\n          <Loader\n            type=\"TailSpin\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            className=\"loader\"\n          />\n        )}\n      </Container>\n      {!_.isEmpty(images) && !isLoading && (\n        <Button onClick={increasePage} label=\"Load more\" />\n      )}\n      {showModal && <Modal largeImgUrl={selectedImage} onClose={toggleModal} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}